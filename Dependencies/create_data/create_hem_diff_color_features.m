function training_data = create_hem_diff_color_features(subject, hem_registration, ...
    affine_data_S2A, non_lin_reg_info, save_dir, dramms_path)

    % create a processing folder storing metadata
    if ~exist(strcat(save_dir, '/color_features'),'dir')
        mkdir(strcat(save_dir, '/color_features'));
        save_dir = strcat(save_dir, '/color_features');
    else
        save_dir = strcat(save_dir, '/color_features');
    end
    
    % red channel
    red_ch_trans_as = transform_to_as(subject(:,:,1), 'red_ch', ...
        affine_data_S2A, non_lin_reg_info.regi_output_path_dfield, ...
        save_dir, dramms_path);

    red_ch_diff = create_img_hem_diff(red_ch_trans_as.def_transformed_img, 'red_channel', ...
        hem_registration.linear_transf, ...
        hem_registration.dfield_path , dramms_path,save_dir);

    red_ch_diff_ss = transform_to_ss(red_ch_diff.img_fliped_registered_path...
        , affine_data_S2A, non_lin_reg_info.inv_info.out_path ...
        , 'red_ch_diff_fliped_diff_ss', dramms_path, save_dir);
    
    training_data.red_ch = subject(:,:,1);
    training_data.red_ch_diff = red_ch_diff_ss.img_ss;
    
    % green channel
    green_ch_trans_as = transform_to_as(subject(:,:,2), 'green_ch', ...
        affine_data_S2A, non_lin_reg_info.regi_output_path_dfield, ...
        save_dir, dramms_path);

    green_ch_diff = create_img_hem_diff(green_ch_trans_as.def_transformed_img, 'green_channel', ...
        hem_registration.linear_transf, ...
        hem_registration.dfield_path , dramms_path,save_dir);

    green_ch_diff_ss = transform_to_ss(green_ch_diff.img_fliped_registered_path...
        , affine_data_S2A, non_lin_reg_info.inv_info.out_path ...
        , 'green_ch_diff_fliped_diff_ss', dramms_path, save_dir);
    
    training_data.green_ch = subject(:,:,2);
    training_data.green_ch_diff = green_ch_diff_ss.img_ss;
    
    % blue channel
    blue_ch_trans_as = transform_to_as(subject(:,:,3), 'blue_ch', ...
        affine_data_S2A, non_lin_reg_info.regi_output_path_dfield, ...
        save_dir, dramms_path);

    blue_ch_diff = create_img_hem_diff(blue_ch_trans_as.def_transformed_img, 'blue_channel', ...
        hem_registration.linear_transf, ...
        hem_registration.dfield_path , dramms_path,save_dir);

    blue_ch_diff_ss = transform_to_ss(blue_ch_diff.img_fliped_registered_path...
        , affine_data_S2A, non_lin_reg_info.inv_info.out_path ...
        , 'green_ch_diff_fliped_diff_ss', dramms_path, save_dir);
    
    training_data.blue_ch = subject(:,:,3);
    training_data.blue_ch_diff = blue_ch_diff_ss.img_ss;

end